@model CRUDAssignment.Models.Employee

@{
    ViewBag.Title = "AddorEdit";
    Layout = null;
}
<div class="container">
    @using (Html.BeginForm("AddorEdit", "Employee", FormMethod.Post, new {@class="well form-horizontal", @id = "addUser", onSubmit = "return addEmpPost(this);", data_resetUrl = Url.Action("AddorEdit", "Employee", new { id = 0 }) }))
    {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.EmployeeID)

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Office, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Office, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Office, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
                        @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Submit" class="btn btn-primary" />
                        @if (@Model.EmployeeID != 0)
                        {
                            <a class="btn btn-success" onclick="refreshAddNewTab('@Url.Action("AddorEdit","Employee", new {id=0})',false)"><i class="glyphicon glyphicon-plus"></i>Add New</a>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>
